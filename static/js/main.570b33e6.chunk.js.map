{"version":3,"sources":["components/Cell.js","components/BattleField.js","components/ModalGameOver.js","utils/fields.js","components/Main.js","components/ModalForName.js","App.js","reportWebVitals.js","index.js"],"names":["Cell","props","React","useState","isComputer","shipId","value","setValue","fillTheCell","useEffect","firedCell","className","onClick","BattleField","field","reply","setReply","flat","filter","el","ships","setShips","handleOnClick","place","isMissed","splice","indexOf","length","gameOver","renderReply","shot","hurt","renderComputerMoveReply","player","toUpperCase","isActivePlayer","map","row","y","cell","x","ModalGameOver","isOpen","isWinner","type","onRestart","renderField","Math","floor","random","Main","computer","human","activePlayer","setActivePlayer","computerField","setComputerField","humanField","setHumanField","array","i","j","getArray","shotsArray","setShotsArray","computerShot","setComputerShot","setGameOver","restart","setRestart","computerMove","pop","setTimeout","data","includes","playerName","ModalForName","name","setName","onClose","onSubmit","e","preventDefault","onNameSubmit","noValidate","onChange","target","autoFocus","required","App","showModal","setShowModal","setPlayerName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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AG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE9B,CACE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,EAAG,EAAG,IAE/B,CACE,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAG,EAAG,EAAG,GAC7B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC5B,CAAC,EAAG,EAAG,EAAG,E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","file":"static/js/main.570b33e6.chunk.js","sourcesContent":["import './Cell.css';\nimport React from 'react';\n\nfunction Cell(props) {\n  // стейт-переменная для заполнения ячейки игрового поля\n  const [value, setValue] = React.useState(props.isComputer ? '' : (props.shipId ? '@' : ''));\n\n  function fillTheCell() {\n    if (props.shipId) {\n      setValue('X');\n    } else { setValue('.'); }\n  }\n\n  // хук, провоцирующий отрисовку ячейки поля при каждом выстреле компьютера\n  // (информация с координатами выстрела спускается из родительского компонента Main)\n  React.useEffect(() => {\n    if (props.firedCell) {\n      fillTheCell();\n    }\n  }, [props.firedCell]);\n\n  function handleOnClick() {\n    fillTheCell();\n    props.onClick(props);\n  }\n\n  function getClassName() {\n    if (!value) {\n      return 'cell';\n    } if (value !== '.' && value !== '@') {\n      return `cell cell_shot ${props.isComputer ? 'cell_inactive' : ''}`;\n    }\n    return `cell ${props.isComputer ? 'cell_inactive' : 'cell_computer-shot'}`;\n  }\n\n  return (\n    <div\n      className={getClassName()}\n      onClick={handleOnClick}\n    >\n      {value}\n    </div>\n  );\n}\n\nexport default Cell;\n","import './BattleField.css';\nimport React from 'react';\nimport Cell from './Cell';\n\nfunction BattleField(props) {\n  const { field } = props;\n\n  // стейт-переменная для вывода результата выстрела на экран\n  const [reply, setReply] = React.useState('^(;,;)^');\n\n  // получение массива с id кораблей для ослеживания состояний убит/ранен\n  const [ships, setShips] = React.useState(field && field.flat().filter((el) => el !== 0));\n\n  // функция-обработчик результатов выстрела компьютера:\n  // при попадании по кораблю или его части, из массива ships убирается его значение \n  // и предоставляется возможность дополнительного хода\n  function renderComputerMoveReply(place) {\n    const shot = field.flat()[place];\n    if (shot === 0) {\n      setReply('not today!');\n      props.onClick({ ...props, isMissed: false });\n    } else {\n      ships.splice(ships.indexOf(shot), 1);\n      setShips(ships);\n\n      if (ships.indexOf(shot) !== -1) {\n        setReply('yet not dead!');\n        props.onClick({ ...props, hurt: true });\n      } else {\n        setReply('killed!');\n\n        if (ships.length === 0) {\n          props.onClick({ ...props, gameOver: true });\n        }\n        props.onClick({ ...props, isMissed: true });\n      }\n    }\n  }\n\n  // хук, провоцирующий отрисовку ответа компьютера при каждом его выстреле\n  // (информация с координатами выстрела спускается из родительского компонента Main)\n  React.useEffect(() => {\n    if (props.firedCell) {\n      renderComputerMoveReply(props.firedCell);\n    }\n  }, [props.firedCell]);\n\n  // функция-дублер обработчика результатов выстрела компьютера, адаптированная под человека:\n  // при попадании по кораблю или его части, из массива ships убирается его значение \n  // и предоставляется возможность дополнительного хода\n  function renderReply(place) {\n    if (place.shipId === 0) {\n      setReply('not today!');\n      props.onClick({ ...props, isMissed: true });\n    } else {\n      ships.splice(ships.indexOf(place.shipId), 1);\n      setShips(ships);\n      if (ships.indexOf(place.shipId) !== -1) {\n        setReply('yet not dead!');\n        props.onClick({ ...props, isMissed: false });\n      } else {\n        setReply('killed!');\n\n        if (ships.length === 0) {\n          props.onClick({ ...props, gameOver: true });\n        }\n        props.onClick({ ...props, isMissed: false });\n      }\n    }\n  }\n\n  function handleOnClick(place) {\n    renderReply(place);\n  }\n\n  function getClassName() {\n    if (props.player === 'computer') {\n      if (props.isActivePlayer) return 'field__grid';\n      return 'field__grid field__grid_inactive';\n    } if (props.isActivePlayer) return 'field__grid field__grid_player_computer';\n    return 'field__grid field__grid_inactive';\n  }\n\n  return (\n    <div className=\"field\">\n      <h2 className=\"field__player-name\">{props.player.toUpperCase()}</h2>\n      <div className={getClassName()}>\n        {field.map((row, y) => row.map((cell, x) => (\n          <Cell\n            key={`${y}${x}`}\n            x={x}\n            y={y}\n            onClick={handleOnClick}\n            shipId={cell}\n            isComputer={props.player === 'computer'}\n            firedCell={(props.firedCell == `${y}${x}`)}\n          />\n        )))}\n      </div>\n      <p className=\"field__reply\">{reply}</p>\n    </div>\n  );\n}\n\nexport default BattleField;\n","import './Modals.css';\nimport React from 'react';\n\nfunction ModalGameOver(props) {\n  return (\n    <div className={`modal ${props.isOpen && 'modal_opened'}`}>\n      <div className=\"modal__container\">\n        <h2 className=\"modal__final-title\">game over!</h2>\n        <p className=\"modal__final-text\">{props.isWinner ? `${props.isWinner}, you win!` : 'You lose :-['}</p>\n        <button className=\"modal__restart-button\" type=\"button\" aria-label=\"Restart\" onClick={props.onRestart}>Play again</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ModalGameOver;\n","// Pдесь будет логика рандомного размещения кораблей на поле\n// Возвращает матрицу, где пустые ячейки = 0, корабли = уникальный id отдельного корабля\n// В режиме разработки использую массив 4 захардкоженных вариантов поля.\n\nexport function renderField() {\n  const fields = [\n    [\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [1, 1, 1, 1, 0, 7, 0, 0, 0, 2],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 2],\n      [0, 0, 8, 0, 4, 4, 0, 0, 0, 2],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 5, 0, 0, 0, 9, 0, 0, 0, 10],\n      [0, 5, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 3, 3, 3, 0, 6, 6],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n    ],\n    [\n      [0, 9, 0, 0, 3, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 3, 0, 0, 0, 5, 5],\n      [0, 8, 0, 0, 3, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 7, 0, 0, 0, 0, 0, 4, 4],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 6, 0, 1, 0, 0],\n      [2, 2, 2, 0, 0, 6, 0, 1, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n      [0, 0, 0, 10, 0, 0, 0, 1, 0, 0],\n    ],\n    [\n      [0, 0, 0, 0, 0, 10, 0, 0, 0, 0],\n      [0, 3, 3, 3, 0, 0, 0, 1, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 1, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 1, 0, 8],\n      [5, 5, 0, 0, 0, 2, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 2, 0, 0, 0, 0],\n      [0, 9, 0, 4, 0, 2, 0, 0, 7, 0],\n      [0, 0, 0, 4, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 6, 6, 0, 0],\n    ],\n    [\n      [0, 0, 0, 0, 0, 0, 2, 0, 0, 0],\n      [0, 6, 6, 0, 0, 0, 2, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 2, 0, 0, 9],\n      [7, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 4, 4, 0, 0, 8, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 5, 0, 0, 0, 0, 0, 3, 0],\n      [0, 0, 5, 0, 0, 10, 0, 0, 3, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 3, 0],\n      [0, 1, 1, 1, 1, 0, 0, 0, 0, 0],\n    ],\n  ];\n\n  return fields[Math.floor(Math.random() * 3)];\n}\n","import './Main.css';\nimport React from 'react';\nimport BattleField from './BattleField';\nimport ModalGameOver from './ModalGameOver';\nimport { renderField } from '../utils/fields';\n\nfunction Main(props) {\n  // стейт для определения очередности хода игроков\n  const [activePlayer, setActivePlayer] = React.useState({\n    computer: true,\n    human: false,\n  });\n\n  // стейты игровых полей\n  const [computerField, setComputerField] = React.useState(renderField());\n  const [humanField, setHumanField] = React.useState(renderField());\n\n  // стейт для массива пустых ячеек поля, по которым стреляет компьютер\n  const [shotsArray, setShotsArray] = React.useState(getArray());\n\n  // ячейка, по которой стреляет компьютер\n  const [computerShot, setComputerShot] = React.useState(null);\n\n  // стейты по окончании игры: вызов модального окна и рестарт игры\n  const [gameOver, setGameOver] = React.useState(false);\n  const [restart, setRestart] = React.useState(true);\n\n  // получить общую очередность рандомных ходов компьютера\n  function getArray() {\n    const array = [];\n    for (let i = 0; i < 100; i++) {\n      array[i] = i;\n    }\n\n    for (let i = array.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [array[i], array[j]] = [array[j], array[i]];\n    }\n    return array;\n  }\n\n  // логика выстрела компьютера: из массива ходов компьютера shotsArray выбирается последнее значение и затем удаляется из стейта\n  function getUniqueShot() {\n    return shotsArray.pop();\n  }\n\n  function computerMove() {\n    setComputerShot(getUniqueShot());\n    setTimeout(() => {\n      setActivePlayer({\n        computer: true,\n        human: false,\n      });\n    }, 2000);\n  }\n\n  // элементарная логика компьютера при \"ранении\" вражеского корабля: обстрел соседней ячейки\n  function computerSimpleLogic() {\n    if (computerShot % 10 < 9 && shotsArray.includes(computerShot + 1)) {\n      setTimeout(() => setComputerShot(computerShot + 1), 1000);\n      shotsArray.splice(shotsArray.indexOf(computerShot + 1), 1);\n      setShotsArray(shotsArray);\n    } else if (computerShot % 10 !== 0 && shotsArray.includes(computerShot - 1)) {\n      setTimeout(() => setComputerShot(computerShot - 1), 1000);\n      shotsArray.splice(shotsArray.indexOf(computerShot - 1), 1);\n      setShotsArray(shotsArray);\n    } else if (computerShot / 10 > 1 && shotsArray.includes(computerShot - 10)) {\n      setTimeout(() => setComputerShot(computerShot - 10), 1000);\n      shotsArray.splice(shotsArray.indexOf(computerShot - 10), 1);\n      setShotsArray(shotsArray);\n    } else if (computerShot / 10 < 9 && shotsArray.includes(computerShot + 10)) {\n      setTimeout(() => setComputerShot(computerShot + 10), 1000);\n      shotsArray.splice(shotsArray.indexOf(computerShot + 10), 1);\n      setShotsArray(shotsArray);\n    } else setTimeout(computerMove, 800);\n  }\n\n  function handleOnClick(data) {\n    if (data.hurt) {\n      computerSimpleLogic();\n    } else {\n\n      // при промахе игрока, ход переходит к противнику благодаря стейту activePlayer\n      data.isMissed && setActivePlayer({\n        computer: !activePlayer.computer,\n        human: !activePlayer.human,\n      });\n      data.isMissed && setTimeout(computerMove, 800);\n\n      // при поднятии инфо о том, что все корабли уничтожены, запускается модальное окно с предложением начать новую игру\n      if (data.gameOver) {\n        setTimeout(() => {\n          setGameOver(true);\n          setRestart(false);\n        }, 900)\n      }\n    }\n  }\n\n  function handleOnRestart() {\n    setGameOver(false);\n    setRestart(true);\n    setComputerField(renderField());\n    setHumanField(renderField());\n  }\n\n  return (\n    <div className=\"main\">\n      <div className=\"main__title-container\">\n        <span className=\"main__ascii-art\">:::::::::      :::     ::::::::::: ::::::::::: :::        ::::::::::  ::::::::  :::    ::: ::::::::::: :::::::::  </span>\n        <span className=\"main__ascii-art\">:+:    :+:   :+: :+:       :+:         :+:     :+:        :+:        :+:    :+: :+:    :+:     :+:     :+:    :+: </span>\n        <span className=\"main__ascii-art\">+:+    +:+  +:+   +:+      +:+         +:+     +:+        +:+        +:+        +:+    +:+     +:+     +:+    +:+ </span>\n        <span className=\"main__ascii-art\">+#++:++#+  +#++:++#++:     +#+         +#+     +#+        +#++:++#   +#++:++#++ +#++:++#++     +#+     +#++:++#+  </span>\n        <span className=\"main__ascii-art\">+#+    +#+ +#+     +#+     +#+         +#+     +#+        +#+               +#+ +#+    +#+     +#+     +#+        </span>\n        <span className=\"main__ascii-art\">#+#    #+# #+#     #+#     #+#         #+#     #+#        #+#        #+#    #+# #+#    #+#     #+#     #+#        </span>\n        <span className=\"main__ascii-art\">#########  ###     ###     ###         ###     ########## ##########  ########  ###    ### ########### ###        </span>\n      </div>\n      <div className=\"main__fields-container\">\n        {restart && (\n          <BattleField\n            onClick={handleOnClick}\n            player=\"computer\"\n            field={computerField}\n            isActivePlayer={activePlayer.computer}\n            isMissed={null}\n          />\n        )}\n        {restart && (\n          <BattleField\n            onClick={handleOnClick}\n            player={props.playerName}\n            field={humanField}\n            isActivePlayer={activePlayer.human}\n            firedCell={computerShot}\n            isMissed={null}\n          />\n        )}\n      </div>\n      <ModalGameOver\n        isOpen={gameOver}\n        isWinner={activePlayer.computer ? props.playerName : false}\n        onRestart={handleOnRestart}\n      />\n    </div>\n  );\n}\n\nexport default Main;\n","import './Modals.css';\nimport React from 'react';\n\nfunction ModalForName(props) {\n  const [name, setName] = React.useState(''); // стейт для хранения имени игрока и передачи его в другие компоненты\n\n  function handleChangeName(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    props.onNameSubmit(name);\n  }\n\n  return (\n    <div className={`modal ${props.isOpen && 'modal_opened'}`}>\n      <div className=\"modal__container\">\n        <button className=\"modal__close-button\" type=\"button\" aria-label=\"Close\" onClick={props.onClose}>X</button>\n        <h2 className=\"modal__title\">Enter your name</h2>\n        <form\n          onSubmit={handleSubmit}\n          className=\"modal__form\"\n          noValidate\n        >\n          <fieldset className=\"modal__input-container\">\n            <input\n              type=\"text\"\n              className=\"modal__text\"\n              value={name}\n              onChange={handleChangeName}\n              autoFocus\n              required\n            />\n          </fieldset>\n          <button className=\"modal__submit\" type=\"submit\">Ok</button>\n        </form>\n      </div>\n\n    </div>\n  );\n}\n\nexport default ModalForName;\n","import './App.css';\nimport React from 'react';\nimport Main from './components/Main';\nimport ModalForName from './components/ModalForName';\n\nfunction App() {\n  const [showModal, setShowModal] = React.useState(true); // стейт для закрытия,открытия модального окна\n  const [playerName, setPlayerName] = React.useState('noname'); // стейт для хранения имени игрока\n\n  function handleSubmitName(playerName) {\n    playerName && setPlayerName(playerName);\n    setShowModal(false);\n  }\n\n  function handlePopupClose() {\n    setShowModal(false);\n  }\n\n  return (\n    <div className=\"App\">\n      <Main\n        playerName={playerName}\n      />\n      <ModalForName\n        isOpen={showModal}\n        onNameSubmit={handleSubmitName}\n        onClose={handlePopupClose}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}